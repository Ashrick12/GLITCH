[security]
suspicious_words = ["bug", "debug", "todo", "to-do", "to_do", "to be implemented", "fix",
        "issue", "problem", "solve", "hack", "ticket", "later", "incorrect", "fixme"]
passwords = ["pass", "pwd", "password", "passwd", "passno", "pass-no", "pass_no"]
users = ["root", "user", "uname", "username", "user-name", "user_name", "owner-name", 
            "owner_name", "admin", "login", "userid", "loginid"]
secrets = ["auth_token", "authetication_token","auth-token", "authentication-token", 
    "secret", "uuid", "crypt", "certificate", "token", "ssh_key", "md5", 
        "rsa", "ssl_content", "ca_content", "ssl-content", "ca-content", 
            "ssh_key_content", "ssh-key-content", "ssh_key_public", 
                "ssh-key-public", "ssh_key_private", "ssh-key-private", 
                    "ssh_key_public_content", "ssh_key_private_content", 
                        "ssh-key-public-content", "ssh-key-private-content"]
misc_secrets = ["key", "cert"]
roles = []
download_extensions = ["iso", "tar", "tar.gz", "tar.bzip2", "zip", 
        "rar", "gzip", "gzip2", "deb", "rpm", "sh", "run", "bin"] 
ssh_dirs = ["source", "destination", "path", "directory", "src", "dest", "file"]
admin = ["admin", "root"]
checksum = ["gpg", "checksum"]
weak_crypt = ["md5", "sha1", "arcfour"]
weak_crypt_whitelist = ["checksum"]
url_http_white_list = ["localhost", "127.0.0.1"]
sensitive_data = ["user_data", "container_definitions", "custom_data"]
key_value_assign = ["key_id=", "access_key=", "key="]

policy_keywords = ["policy"]
access_keywords = ["\"principal\":"]
access_values = ["\"\\*\""]

secrets_white_list = ["cloudfront_default_certificate", "client_cert_enabled", "api_key_required"]

github_actions_resources = ["resource.github_actions_environment_secret", 
    "resource.github_actions_organization_secret", "resource.github_actions_secret"]

integrity_policy = [{"au_type": ["resource.google_compute_instance"], "attribute": "enable_integrity_monitoring",
        "parents": ["shielded_instance_config"], "values": ["true"], "required": "no"},
    {"au_type": ["resource.google_compute_instance"], "attribute": "enable_vtpm", 
        "parents": ["shielded_instance_config"], "values": ["true"], "required": "no"},
    {"au_type": ["resource.aws_ecr_repository"], "attribute": "image_tag_mutability", "parents": [""],
        "values": ["immutable"], "required": "yes"}]

ensure_https = [{"au_type": ["resource.aws_cloudfront_distribution"], "attribute": "viewer_protocol_policy", 
        "parents": ["default_cache_behavior", "ordered_cache_behavior"], "values":["redirect-to-https", "https-only"], 
        "required": "yes"},
    {"au_type": ["resource.aws_elasticsearch_domain"], "attribute": "enforce_https", "parents": ["domain_endpoint_options"],
        "values": ["true"], "required": "yes"},
    {"au_type": ["resource.aws_alb_listener"], "attribute": "protocol", "parents": [""], "values": ["https", "tls"],
        "required": "yes"},
    {"au_type": ["resource.azurerm_app_service", "resource.azurerm_app_service_slot", "resource.azurerm_function_app",
        "resource.azurerm_function_app_slot", "resource.azurerm_linux_web_app", "resource.azurerm_windows_web_app"], 
        "attribute": "https_only", "parents": [""], "values": ["true"], "required": "yes"},
    {"au_type": ["resource.azurerm_storage_account"], "attribute": "enable_https_traffic_only", 
        "parents": [""], "values": ["true"], "required": "no"},
    {"au_type": ["resource.digitalocean_loadbalancer"], "attribute": "entry_protocol",
        "parents": ["forwarding_rule"], "values": ["https"], "required": "no"}]

ssl_tls_policy = [{"au_type": ["resource.aws_api_gateway_domain_name"], "attribute": "security_policy", 
        "parents": [""], "values": ["tls_1_2", "tls_1_3"], "required": "yes"},
    {"au_type": ["resource.aws_cloudfront_distribution"], "attribute": "minimum_protocol_version", 
        "parents": ["viewer_certificate"], "values": ["tlsv1.2_2018", "tlsv1.2_2019", "tlsv1.2_2021"], "required": "yes"},
    {"au_type": ["resource.aws_elasticsearch_domain"], "attribute": "tls_security_policy", 
        "parents": ["domain_endpoint_options"], "values": ["policy-min-tls-1-2-2019-07"], "required": "yes"},
    {"au_type": ["resource.aws_alb_listener"], "attribute": "ssl_policy", "parents": [""], 
        "values": ["elbsecuritypolicy-tls-1-2-2017-01", "elbsecuritypolicy-tls-1-2-ext-2018-06"], "required": "yes"},
    {"au_type": ["resource.azurerm_app_service", "resource.azurerm_app_service_slot", "resource.azurerm_function_app"],
        "parents": ["site_config"], "attribute": "min_tls_version", "values": ["1.2"], "required": "no"},
    {"au_type": ["resource.google_compute_ssl_policy"], "attribute": "min_tls_version", "parents": [""],  
        "values": ["tls_1_2"], "required": "yes"},
    {"au_type": ["resource.azurerm_postgresql_server", "resource.azurerm_mariadb_server", "resource.azurerm_mysql_server"], 
        "attribute": "ssl_enforcement_enabled", "parents": [""], "values": ["true"], "required": "yes"},
    {"au_type": ["resource.azurerm_mysql_server", "resource.azurerm_postgresql_server"],
        "attribute": "ssl_minimal_tls_version_enforced", "parents": [""], "values": ["tls1_2"], "required": "no"},
    {"au_type": ["resource.azurerm_mssql_server"], "attribute": "minimum_tls_version", 
        "parents": [""], "values": ["1.2"], "required": "no"},
    {"au_type": ["resource.google_sql_database_instance"], "attribute": "require_ssl", 
        "parents": ["ip_configuration"], "values": ["true"], "required": "yes"},
    {"au_type": ["resource.azurerm_app_service"], "attribute": "client_cert_enabled", "parents": [""],
        "values": ["true"], "required": "yes"}]

ensure_dnssec = [{"au_type": ["resource.google_dns_managed_zone"], "attribute": "dnssec_config", "parents": [""],
        "values": [""], "required": "yes"},
    {"au_type": ["resource.google_dns_managed_zone"], "attribute": "state",
        "parents": ["dnssec_config"], "values": ["on"], "required": "yes"}]

use_public_ip = [{"au_type": ["resource.aws_launch_configuration", "resource.aws_instance"],
        "attribute": "associate_public_ip_address", "parents": [""], "values": ["false"], "required": "no"},
    {"au_type": ["resource.aws_subnet"], "attribute": "map_public_ip_on_launch", "parents": [""],
        "values": ["false"], "required": "no"},
    {"au_type": ["resource.google_compute_instance"], "attribute": "access_config", "parents": ["network_interface"],
        "values": [""], "required": "must_not_exist"},
    {"au_type": ["resource.opc_compute_ip_address_reservation"], "attribute": "ip_address_pool", "parents": [""],
        "values": ["cloud-ippool"], "required": "no"}]

insecure_access_control = [{"au_type": ["resource.aws_eks_cluster"], "attribute": "endpoint_public_access",
        "parents": ["vpc_config"], "values": ["false"], "required": "yes"},
    {"au_type": ["resource.aws_eks_cluster"], "attribute": "public_access_cidrs[0]", "parents": ["vpc_config"],
        "values": [""], "required": "yes"},
    {"au_type": ["resource.aws_lambda_permission"], "attribute": "source_arn", "parents": [""],
        "values": [""], "required": "yes"},
    {"au_type": ["resource.aws_db_instance", "resource.aws_rds_cluster_instance"], "attribute": "publicly_accessible", "parents": [""],
        "values": ["false"], "required": "no"},
    {"au_type": ["resource.aws_s3_bucket_public_access_block"], "attribute": "block_public_acls", "parents": [""],
        "values": ["true"], "required": "yes"},
    {"au_type": ["resource.aws_s3_bucket_public_access_block"], "attribute": "block_public_policy", "parents": [""],
        "values": ["true"], "required": "yes"},
    {"au_type": ["resource.aws_s3_bucket_public_access_block"], "attribute": "restrict_public_buckets", "parents": [""],
        "values": ["true"], "required": "yes"},
    {"au_type": ["resource.aws_s3_bucket_public_access_block"], "attribute": "ignore_public_acls", "parents": [""],
        "values": ["true"], "required": "yes"},
    {"au_type": ["resource.aws_s3_bucket"], "attribute": "acl", "parents": [""], "values": ["private"], "required": "no"},
    {"au_type": ["resource.azurerm_kubernetes_cluster"], "attribute": "authorized_ip_ranges[0]", 
        "parents": ["api_server_access_profile"], "values": [""], "required": "yes"},
    {"au_type": ["resource.azurerm_postgresql_server", "resource.azurerm_mariadb_server", "resource.azurerm_mssql_server",
        "resource.azurerm_mysql_server"], "attribute": "public_network_access_enabled", "parents": [""], 
        "values": ["false"], "required": "yes"},
    {"au_type": ["resource.azurerm_data_factory"], "attribute": "public_network_enabled", "parents": [""], 
        "values": ["false"], "required": "yes"},
    {"au_type": ["resource.azurerm_storage_container"], "attribute": "container_access_type", "parents": [""], 
        "values": ["private"], "required": "no"},
    {"au_type": ["resource.digitalocean_spaces_bucket"], "attribute": "acl", "parents": [""], 
        "values": ["private"], "required": "yes"},
    {"au_type": ["resource.digitalocean_spaces_bucket_object"], "attribute": "acl", "parents": [""], 
        "values": ["private"], "required": "no"},
    {"au_type": ["resource.google_bigquery_dataset"], "attribute": "special_group", "parents": ["access"], 
        "values": ["projectowners", "projectreaders", "projectwriters"], "required": "no"},
    {"au_type": ["resource.google_container_cluster"], "attribute": "enable_private_nodes", 
        "parents": ["private_cluster_config"], "values": ["true"], "required": "yes"}]
    
    
[design]
exec_atomic_units = ["exec"]
default_variables = []
